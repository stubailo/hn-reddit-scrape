{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"domain": "threeifbywhiskey.github.io", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zo0te", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "threeifbywhiskey", "media": null, "score": 13, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zo0te/fizzbuzz_sans_alphanumerics/", "name": "t3_1zo0te", "created": 1394088278.0, "url": "http://threeifbywhiskey.github.io/2014/03/05/non-alphanumeric-ruby-for-fun-and-not-much-else/", "author_flair_text": null, "title": "FizzBuzz Sans Alphanumerics", "created_utc": 1394059478.0, "ups": 13, "num_comments": 1, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zogp6", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "the4dpatrick", "media": null, "score": 6, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 1, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zogp6/find_anyones_email_a_ruby_script/", "name": "t3_1zogp6", "created": 1394097740.0, "url": "https://github.com/the4dpatrick/find-any-email", "author_flair_text": null, "title": "Find Anyone's Email: A Ruby Script", "created_utc": 1394068940.0, "ups": 7, "num_comments": 6, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "devcenter.heroku.com", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zn9ho", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "schneems", "media": null, "score": 17, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 2, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zn9ho/almost_everything_you_wanted_to_know_about_the/", "name": "t3_1zn9ho", "created": 1394073373.0, "url": "https://devcenter.heroku.com/articles/rails-4-asset-pipeline", "author_flair_text": null, "title": "(Almost) Everything you wanted to know about the Rails 4 Asset Pipeline", "created_utc": 1394044573.0, "ups": 19, "num_comments": 12, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "maori.geek.nz", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1znm9n", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "Grahar64", "media": null, "score": 6, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 2, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1znm9n/what_is_ruby_it_is_fun_and_makes_you_happy/", "name": "t3_1znm9n", "created": 1394080319.0, "url": "http://maori.geek.nz/post/what_is_ruby_it_is_fun_and_makes_you_happy", "author_flair_text": null, "title": "What is Ruby? It is fun and makes you happy!", "created_utc": 1394051519.0, "ups": 8, "num_comments": 2, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "db.tt", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zlf0l", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "JustinCampbell", "media": null, "score": 82, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 10, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zlf0l/it_costs_7k_per_month_to_host_rubygems/", "name": "t3_1zlf0l", "created": 1394019084.0, "url": "https://db.tt/PXNKk3rt", "author_flair_text": null, "title": "It costs $7k per month to host RubyGems", "created_utc": 1393990284.0, "ups": 92, "num_comments": 16, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.ruby", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello all! I am having a bit of trouble as to why bubble sorting code is written a certain way. I do not know how to follow the logic flow:&lt;/p&gt;\n\n&lt;p&gt;def bubble_sort(arr)&lt;br/&gt;\n  sorted = false&lt;br/&gt;\n  until sorted&lt;br/&gt;\n    sorted = true&lt;br/&gt;\n    (arr.count - 1).times do |i|&lt;br/&gt;\n      if arr[i] &amp;gt; arr[i + 1]&lt;br/&gt;\n        arr[i], arr[i + 1] = arr[i + 1], arr[i]&lt;br/&gt;\n        sorted = false&lt;br/&gt;\n      end&lt;br/&gt;\n    end&lt;br/&gt;\n  end  &lt;/p&gt;\n\n&lt;p&gt;arr&lt;br/&gt;\nend  &lt;/p&gt;\n\n&lt;p&gt;The part I do not understand is we first stated our variable of sorted = false. Next, we write until sorted (until false), and then we immediately write sorted = true again? I&amp;#39;m not sure how the logic is built with these sorted variables....&lt;/p&gt;\n\n&lt;p&gt;Thanks in advance for your help. &lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello all! I am having a bit of trouble as to why bubble sorting code is written a certain way. I do not know how to follow the logic flow:\n\ndef bubble_sort(arr)  \n  sorted = false  \n  until sorted  \n    sorted = true  \n    (arr.count - 1).times do |i|  \n      if arr[i] &gt; arr[i + 1]  \n        arr[i], arr[i + 1] = arr[i + 1], arr[i]  \n        sorted = false  \n      end  \n    end  \n  end  \n  \n  arr  \nend  \n  \nThe part I do not understand is we first stated our variable of sorted = false. Next, we write until sorted (until false), and then we immediately write sorted = true again? I'm not sure how the logic is built with these sorted variables....\n\nThanks in advance for your help. \n", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1znpdw", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "juljun", "media": null, "score": 3, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "is_self": true, "permalink": "/r/ruby/comments/1znpdw/noob_needing_help_understanding_a_part_of_code/", "name": "t3_1znpdw", "created": 1394082046.0, "url": "http://www.reddit.com/r/ruby/comments/1znpdw/noob_needing_help_understanding_a_part_of_code/", "author_flair_text": null, "title": "Noob needing help understanding a part of code for bubble sorting", "created_utc": 1394053246.0, "ups": 3, "num_comments": 2, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "wootstudio.ca", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zmm3p", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "marcgagne", "media": null, "score": 8, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zmm3p/tutorial_windows_azure_ruby_on_rails_capistrano_3/", "name": "t3_1zmm3p", "created": 1394059377.0, "url": "http://wootstudio.ca/articles/tutorial-windows-azure-ruby-on-rails-capistrano-3-postgresql", "author_flair_text": null, "title": "Tutorial: Windows Azure, Ruby on Rails &amp; Capistrano 3", "created_utc": 1394030577.0, "ups": 8, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "trevmex.com", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1znd0f", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "trevmex", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 6, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1znd0f/cute_ruby_code/", "name": "t3_1znd0f", "created": 1394075362.0, "url": "http://trevmex.com/post/78668018425/cute-ruby-code", "author_flair_text": null, "title": "Cute ruby code", "created_utc": 1394046562.0, "ups": 8, "num_comments": 1, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.ruby", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve been reading the Rails 4 Way and I&amp;#39;ve come across &lt;a href=\"https://github.com/voxdolo/decent_exposure\"&gt;decent_exposure&lt;/a&gt;. Has anyone used this? Whats your opinion on it?&lt;/p&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;Controllers without decent_exposure&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre&gt;&lt;code&gt;class Controller\n  def new\n    @person = Person.new(params[:person])\n  end\n\n  def create\n    @person = Person.new(params[:person])\n    if @person.save\n      redirect_to(@person)\n    else\n      render :new\n    end\n  end\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;blockquote&gt;\n&lt;p&gt;With decent_exposure&lt;/p&gt;\n&lt;/blockquote&gt;\n\n&lt;pre&gt;&lt;code&gt;class Controller\n  expose(:person)\n\n  def create\n    if person.save\n      redirect_to(person)\n    else\n      render :new\n    end\n  end\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I've been reading the Rails 4 Way and I've come across [decent_exposure](https://github.com/voxdolo/decent_exposure). Has anyone used this? Whats your opinion on it?\n\n&gt;Controllers without decent_exposure\n\n    class Controller\n      def new\n        @person = Person.new(params[:person])\n      end\n    \n      def create\n        @person = Person.new(params[:person])\n        if @person.save\n          redirect_to(@person)\n        else\n          render :new\n        end\n      end\n\n&gt; With decent_exposure\n\n    class Controller\n      expose(:person)\n    \n      def create\n        if person.save\n          redirect_to(person)\n        else\n          render :new\n        end\n      end", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zmge3", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "niveafire", "media": null, "score": 5, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "is_self": true, "permalink": "/r/ruby/comments/1zmge3/opinion_on_decent_exposure/", "name": "t3_1zmge3", "created": 1394054665.0, "url": "http://www.reddit.com/r/ruby/comments/1zmge3/opinion_on_decent_exposure/", "author_flair_text": null, "title": "Opinion on decent_exposure?", "created_utc": 1394025865.0, "ups": 5, "num_comments": 3, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.ruby", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1znblp", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "jjopm", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 2, "saved": false, "is_self": true, "permalink": "/r/ruby/comments/1znblp/what_is_the_rubyfocused_startup_to_watch_right_now/", "name": "t3_1znblp", "created": 1394074567.0, "url": "http://www.reddit.com/r/ruby/comments/1znblp/what_is_the_rubyfocused_startup_to_watch_right_now/", "author_flair_text": null, "title": "What is the Ruby-focused startup to watch right now?", "created_utc": 1394045767.0, "ups": 2, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.ruby", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi there,&lt;/p&gt;\n\n&lt;p&gt;I would like to refactor my controller actions which look like this: &lt;a href=\"http://pastebin.com/tUadGXL1\"&gt;http://pastebin.com/tUadGXL1&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;There are just three small changes in these methods and I just don&amp;#39;t know how to dry it up. Thanks for your help!&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi there,\n\nI would like to refactor my controller actions which look like this: http://pastebin.com/tUadGXL1\n\nThere are just three small changes in these methods and I just don't know how to dry it up. Thanks for your help!", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zn4mm", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "BigDane1992", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "is_self": true, "permalink": "/r/ruby/comments/1zn4mm/ror_how_can_i_refactor_this/", "name": "t3_1zn4mm", "created": 1394070564.0, "url": "http://www.reddit.com/r/ruby/comments/1zn4mm/ror_how_can_i_refactor_this/", "author_flair_text": null, "title": "[ROR] How can I refactor this?", "created_utc": 1394041764.0, "ups": 1, "num_comments": 7, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "hire.soff.es", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zmxp2", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "jjopm", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 2, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zmxp2/300_per_hour_the_rate_is_nonnegotiable_all_time/", "name": "t3_1zmxp2", "created": 1394066705.0, "url": "http://hire.soff.es", "author_flair_text": null, "title": "\"$300 per hour. The rate is non-negotiable. All time needs to be booked ahead of time. I will require half down up front. Minimum of 5 hour ($1,500) commitment.\" How do you feel about this rate?", "created_utc": 1394037905.0, "ups": 3, "num_comments": 21, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "en.wikipedia.org", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zk0kj", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "jjopm", "media": null, "score": 27, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 2, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zk0kj/why_did_heroku_start_out_as_rubyonly/", "name": "t3_1zk0kj", "created": 1393990396.0, "url": "http://en.wikipedia.org/wiki/Heroku", "author_flair_text": null, "title": "Why did Heroku start out as Ruby-only?", "created_utc": 1393961596.0, "ups": 29, "num_comments": 35, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "brandonhilkert.com", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zmf4i", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "brandonhilkert", "media": null, "score": 1, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 2, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zmf4i/build_a_ruby_gem_tech_review/", "name": "t3_1zmf4i", "created": 1394053359.0, "url": "http://brandonhilkert.com/blog/build-a-ruby-gem-technical-review/?utm_source=reddit&amp;utm_medium=social&amp;utm_campaign=book-tech-review", "author_flair_text": null, "title": "Build a Ruby Gem Tech. Review", "created_utc": 1394024559.0, "ups": 3, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "pairstudying.com", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zn9ku", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "Moontrepreneur", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 5, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zn9ku/sign_up_to_receive_1_week_mentorshipcurriculum/", "name": "t3_1zn9ku", "created": 1394073425.0, "url": "http://www.pairstudying.com/", "author_flair_text": null, "title": "Sign up to receive 1 week mentorship/curriculum for free", "created_utc": 1394044625.0, "ups": 1, "num_comments": 1, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.ruby", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;ve built a few little rails apps on my own, and in the past I&amp;#39;ve used solarized and molokai as color/syntax themes. I&amp;#39;m about to start a new project and was curious if there was something that most people agreed was great these days.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I've built a few little rails apps on my own, and in the past I've used solarized and molokai as color/syntax themes. I'm about to start a new project and was curious if there was something that most people agreed was great these days.", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zl00d", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "mikemchenry", "media": null, "score": 4, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 1, "saved": false, "is_self": true, "permalink": "/r/ruby/comments/1zl00d/ruby_newbie_looking_for_mostpreferred_vim/", "name": "t3_1zl00d", "created": 1394010083.0, "url": "http://www.reddit.com/r/ruby/comments/1zl00d/ruby_newbie_looking_for_mostpreferred_vim/", "author_flair_text": null, "title": "Ruby Newbie, looking for most-preferred Vim colorscheme recommendations", "created_utc": 1393981283.0, "ups": 5, "num_comments": 19, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "codegeekz.com", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zmwau", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "Hughlander", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 6, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zmwau/7_best_ruby_on_rails_ides/", "name": "t3_1zmwau", "created": 1394065845.0, "url": "http://codegeekz.com/7-best-ruby-on-rails-ides/", "author_flair_text": null, "title": "7 Best Ruby on Rails IDEs", "created_utc": 1394037045.0, "ups": 1, "num_comments": 1, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.ruby", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m trying to compile a portable version of Ruby. Everything compiles, and works on the host system, but when I tar it up and send it to another server - it pukes:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;/tmp/linux/ruby/bin/ruby: /lib64/libc.so.6: version `GLIBC_2.11&amp;#39; not found (required by                /tmp/linux/ruby/bin/ruby)\n/tmp/linux/ruby/bin/ruby: /lib64/libc.so.6: version `GLIBC_2.14&amp;#39; not found (required by   /tmp/linux/ruby/bin/ruby)\n/tmp/linux/ruby/bin/ruby: /lib64/libc.so.6: version `GLIBC_2.6&amp;#39; not found (required by   /tmp/linux/ruby/bin/ruby)\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Basically, the version of glibc I&amp;#39;m using is greater on the server I compiled it on. However, what I&amp;#39;m trying to do is statically link ruby on compile time. Is this possible? At compile time provide everything it will need?&lt;/p&gt;\n\n&lt;p&gt;Here are my configure options:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;./configure --prefix=/data/linux/ruby \\\n--disable-install-doc \\\n--with-static-linked-ext \\\n--with-openssl-dir=/data/linux/openssl \\\n--with-zlib-dir=/data/linux/zlib\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Everything compiles - but like I said does not work on other systems with different libraries. What am I missing?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm trying to compile a portable version of Ruby. Everything compiles, and works on the host system, but when I tar it up and send it to another server - it pukes:\n\n    /tmp/linux/ruby/bin/ruby: /lib64/libc.so.6: version `GLIBC_2.11' not found (required by                /tmp/linux/ruby/bin/ruby)\n    /tmp/linux/ruby/bin/ruby: /lib64/libc.so.6: version `GLIBC_2.14' not found (required by   /tmp/linux/ruby/bin/ruby)\n    /tmp/linux/ruby/bin/ruby: /lib64/libc.so.6: version `GLIBC_2.6' not found (required by   /tmp/linux/ruby/bin/ruby)\n\n\nBasically, the version of glibc I'm using is greater on the server I compiled it on. However, what I'm trying to do is statically link ruby on compile time. Is this possible? At compile time provide everything it will need?\n\nHere are my configure options:\n\n    ./configure --prefix=/data/linux/ruby \\\n    --disable-install-doc \\\n    --with-static-linked-ext \\\n    --with-openssl-dir=/data/linux/openssl \\\n    --with-zlib-dir=/data/linux/zlib\n\nEverything compiles - but like I said does not work on other systems with different libraries. What am I missing?", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zlfmx", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "andexs", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "is_self": true, "permalink": "/r/ruby/comments/1zlfmx/compiling_a_portable_ruby/", "name": "t3_1zlfmx", "created": 1394019495.0, "url": "http://www.reddit.com/r/ruby/comments/1zlfmx/compiling_a_portable_ruby/", "author_flair_text": null, "title": "Compiling a portable ruby?", "created_utc": 1393990695.0, "ups": 2, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "gregelizondo.github.io", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zj91w", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "gregordog", "media": null, "score": 12, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 1, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zj91w/getting_started_with_rspec_and_unit_testing/", "name": "t3_1zj91w", "created": 1393975545.0, "url": "http://gregelizondo.github.io/2014/03/03/getting-started-with-rspec-and-unit-testing.html", "author_flair_text": null, "title": "Getting Started with RSpec and Unit Testing", "created_utc": 1393946745.0, "ups": 13, "num_comments": 7, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "robm.me.uk", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zj41w", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "robmyrkur", "media": null, "score": 11, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 1, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zj41w/showing_real_progress_in_longrunning_commandline/", "name": "t3_1zj41w", "created": 1393972315.0, "url": "http://robm.me.uk/ruby/2014/03/04/real-progress.html", "author_flair_text": null, "title": "Showing real progress in long-running command-line scripts", "created_utc": 1393943515.0, "ups": 12, "num_comments": 2, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "andyjeffries.co.uk", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1ziyvm", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "andyjeffries", "media": null, "score": 13, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1ziyvm/using_the_recently_released_activerestclient_to/", "name": "t3_1ziyvm", "created": 1393968197.0, "url": "http://www.andyjeffries.co.uk/using-activerestclient-to-access-an-api/", "author_flair_text": null, "title": "Using the recently released ActiveRestClient to access an API", "created_utc": 1393939397.0, "ups": 13, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "pakyow.com", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zk571", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "peglegcraig", "media": null, "score": 4, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zk571/pakyow_08_released_new_router_updated_view_syntax/", "name": "t3_1zk571", "created": 1393992883.0, "url": "http://pakyow.com/blog/2014/03/04/zero_eight", "author_flair_text": null, "title": "Pakyow 0.8 Released: New Router, Updated View Syntax, and Smarter View Transformation", "created_utc": 1393964083.0, "ups": 4, "num_comments": 1, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "theverge.com", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zj3ew", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "jjopm", "media": null, "score": 5, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 5, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zj3ew/is_anyone_rocking_a_chromebook_with_chrome_os_or/", "name": "t3_1zj3ew", "created": 1393971876.0, "url": "http://www.theverge.com/2014/3/3/5465946/samsungs-new-chromebook-2-is-a-light-and-leathery-update-to-a-wildly", "author_flair_text": null, "title": "Is anyone rocking a Chromebook (with Chrome OS or Ubuntu etc.) for Ruby development? Curious if Chromebook 2 will be a viable production machine.", "created_utc": 1393943076.0, "ups": 10, "num_comments": 21, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "blog.mongolab.com", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": null, "selftext": "", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zk6rj", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "jesusangelm", "media": null, "score": 0, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 1, "saved": false, "is_self": false, "permalink": "/r/ruby/comments/1zk6rj/mongodb_driver_tips_tricks_mongoid_3/", "name": "t3_1zk6rj", "created": 1393993720.0, "url": "http://blog.mongolab.com/2014/02/mongodb-driver-tips-tricks-mongoid-3", "author_flair_text": null, "title": "MongoDB driver tips &amp; tricks: Mongoid 3", "created_utc": 1393964920.0, "ups": 1, "num_comments": 0, "visited": false, "num_reports": null, "distinguished": null}}, {"kind": "t3", "data": {"domain": "self.ruby", "banned_by": null, "media_embed": {}, "subreddit": "ruby", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I saw that &lt;a href=\"/r/LearnRubyOnRails\"&gt;/r/LearnRubyOnRails&lt;/a&gt; did one 6 months ago, and was curious about whether anyone was interested in doing a fresh one.\nWe could have someone with some experience suggest studying materials, and then create a private subreddit, mailing list, and/or IRC channel for it, to discuss things, help each other with understandings, trade code examples, etc. I think it&amp;#39;d be really helpful.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I saw that /r/LearnRubyOnRails did one 6 months ago, and was curious about whether anyone was interested in doing a fresh one.\nWe could have someone with some experience suggest studying materials, and then create a private subreddit, mailing list, and/or IRC channel for it, to discuss things, help each other with understandings, trade code examples, etc. I think it'd be really helpful.", "likes": null, "secure_media": null, "link_flair_text": null, "id": "1zib2a", "gilded": 0, "secure_media_embed": {}, "clicked": false, "stickied": false, "author": "KarenFilipelly", "media": null, "score": 11, "approved_by": null, "over_18": false, "hidden": false, "thumbnail": "", "subreddit_id": "t5_2qh21", "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 2, "saved": false, "is_self": true, "permalink": "/r/ruby/comments/1zib2a/is_there_any_interest_in_forming_a_ruby_rails/", "name": "t3_1zib2a", "created": 1393942404.0, "url": "http://www.reddit.com/r/ruby/comments/1zib2a/is_there_any_interest_in_forming_a_ruby_rails/", "author_flair_text": null, "title": "Is there any interest in forming a Ruby (+Rails) study group?", "created_utc": 1393913604.0, "ups": 13, "num_comments": 21, "visited": false, "num_reports": null, "distinguished": null}}], "after": "t3_1zib2a", "before": null}}